spring:
  application:
    name: ecommerce-backend
  
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}
  
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        format_sql: true
  
  jackson:
    default-property-inclusion: non_null
    date-format: yyyy-MM-dd'T'HH:mm:ss.SSSXXX
  
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB

security:
  jwt:
    secret: ${JWT_SECRET:ThisIsAVeryLongAndSecureJWTSecretKeyForHMACSHA256Algorithm}
    expiration: ${JWT_EXPIRATION:86400000} # 24 hours
    refresh-expiration: ${JWT_REFRESH_EXPIRATION:604800000} # 7 days

# Cloudflare R2 CDN Configuration
r2:
  bucket:
    name: ${R2_BUCKET_NAME}
  cdn:
    domain: ${R2_CDN_DOMAIN}
  account:
    id: ${R2_ACCOUNT_ID}
  access:
    key:
      id: ${R2_ACCESS_KEY_ID}
  secret:
    access:
      key: ${R2_SECRET_ACCESS_KEY}

# Google Gemini AI Configuration
gemini:
  api:
    key: ${GEMINI_API_KEY}
    url: ${GEMINI_API_URL:https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-image-preview:generateContent}
  max:
    retries: ${GEMINI_MAX_RETRIES:3}
  timeout: ${GEMINI_TIMEOUT:60000}


---
spring:
  config:
    activate:
      on-profile: dev
  
  datasource:
    url: jdbc:postgresql://localhost:5432/ecommerce_db
    username: ${DATABASE_USERNAME:${USER}}
    password: ${DATABASE_PASSWORD:}
    driver-class-name: org.postgresql.Driver
  
  jpa:
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect

---
spring:
  config:
    activate:
      on-profile: prod
  
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/ecommerce}
    username: ${DATABASE_USERNAME:ecommerce}
    password: ${DATABASE_PASSWORD:password}
    driver-class-name: org.postgresql.Driver
  
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false

logging:
  level:
    com.charbel.ecommerce: ${LOG_LEVEL:INFO}
    org.springframework.security: ${SECURITY_LOG_LEVEL:INFO}

---
spring:
  config:
    activate:
      on-profile: docker
  
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://postgres:5432/ecommerce_db}
    username: ${DATABASE_USERNAME:ecommerce_user}
    password: ${DATABASE_PASSWORD:ecommerce_password}
    driver-class-name: org.postgresql.Driver
  
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: false

logging:
  level:
    com.charbel.ecommerce: ${LOG_LEVEL:INFO}
    org.springframework.security: ${SECURITY_LOG_LEVEL:INFO}
    org.springframework.web: ${WEB_LOG_LEVEL:INFO}