////////////////////////////////////////////////////
// Mini-Ecommerce Database Schema (DBML)
////////////////////////////////////////////////////

// GREEN — Core Entities
 users {
  id UUID [pk]
  email varchar [unique, not null]
  passwordHash varchar [not null]
  firstName varchar [not null]
  lastName varchar [not null]
  role userRole [not null, default: 'CUSTOMER']
  createdAt datetime [not null]
  updatedAt datetime [not null]
}

Enum userRole {
  CUSTOMER
  ADMIN
}

 refresh_tokens {
  id UUID [pk]
  token varchar [unique, not null]
  userId UUID [not null]
  expiresAt datetime [not null]
  createdAt datetime [not null]
  revokedAt datetime
}

////////////////////////////////////////////////////
// PURPLE — Brands & Categories
 brands {
  id UUID [pk]
  name varchar [unique, not null]
  slug varchar [unique, not null] // e.g. "nike", "adidas"
  description text
  logoUrl varchar
  websiteUrl varchar
  status brandStatus [not null, default: 'ACTIVE']
  createdAt datetime [not null]
  updatedAt datetime [not null]
}

Enum brandStatus {
  ACTIVE
  INACTIVE
}

 categories {
  id UUID [pk]
  name varchar [not null]
  slug varchar [unique, not null] // e.g. "mens-clothing", "womens-shoes"
  description text
  parentId UUID // for hierarchical categories
  level int [not null, default: 0] // 0=root, 1=subcategory, etc.
  sortOrder int [not null, default: 0]
  isActive boolean [not null, default: true]
  createdAt datetime [not null]
  updatedAt datetime [not null]
}

////////////////////////////////////////////////////
// BLUE — Catalog & Variants
 products {
  id UUID pk
  name varchar [not null]
  description text
  basePrice int [not null] // in cents (smallest currency unit)
  brandId UUID [not null] // foreign key to brands
  categoryId UUID [not null] // foreign key to categories
  gender genderType [not null]
  status productStatus [not null, default: 'ACTIVE']
  averageRating decimal(2,1) [default: null] // average rating 1.0-5.0
  reviewCount int [not null, default: 0] // total number of reviews
  metadata jsonb // SEO, tags, special attributes
  createdAt datetime [not null]
  updatedAt datetime [not null]
}

Enum genderType {
  MEN
  WOMEN
  KIDS
  UNISEX
}

Enum productStatus {
  ACTIVE
  INACTIVE
}

// Fashion-specific filter enums
Enum sizeType {
  XS
  S
  M
  L
  XL
  XXL
  XXXL
  // Numeric sizes for shoes, etc. will be in attributes JSONB
}

Enum colorFamily {
  BLACK
  WHITE
  GRAY
  BROWN
  BEIGE
  RED
  PINK
  ORANGE
  YELLOW
  GREEN
  BLUE
  PURPLE
  NAVY
  MULTICOLOR
}

Enum materialType {
  COTTON
  POLYESTER
  WOOL
  SILK
  LEATHER
  DENIM
  LINEN
  CASHMERE
  NYLON
  SPANDEX
  BLEND
}

Enum seasonType {
  SPRING
  SUMMER
  FALL
  WINTER
  ALL_SEASON
}

Enum occasionType {
  CASUAL
  FORMAL
  BUSINESS
  SPORT
  PARTY
  BEACH
  OUTDOOR
}

Enum fitType {
  SLIM
  REGULAR
  LOOSE
  OVERSIZED
  TAILORED
}

 product_variants {
  id UUID [pk]
  productId UUID fk
  sku varchar [unique, not null]
  attributes jsonb [not null] // e.g. {"size": "M", "color": "Red"}
  price int [not null] // in cents
  stock int [not null, default: 0]
  createdAt datetime [not null]
  updatedAt datetime [not null]
}

 product_images {
  id UUID [pk]
  productId UUID [not null]
  variantId UUID // optional - for variant-specific images
  imageUrl varchar [not null]
  altText varchar
  isPrimary boolean [not null, default: false]
  sortOrder int [not null, default: 0]
  createdAt datetime [not null]
  updatedAt datetime [not null]
}

////////////////////////////////////////////////////
// ORANGE — Orders & Cart
 carts {
  id UUID [pk]
  userId UUID fk
  createdAt datetime [not null]
  updatedAt datetime [not null]
}

 cart_items {
  id UUID [pk]
  cartId UUID fk
  variantId UUID fk
  quantity int [not null, default: 1]
  createdAt datetime [not null]
  updatedAt datetime [not null]
}

 orders {
  id UUID [pk]
  userId UUID fk
  totalAmount int [not null] // sum in cents
  status orderStatus [not null, default: 'PENDING']
  createdAt datetime [not null]
  updatedAt datetime [not null]
}

Enum orderStatus {
  PENDING
  PAID
  SHIPPED
  COMPLETED
  CANCELLED
}

 order_items {
  id UUID [pk]
  orderId UUID fk
  variantId UUID fk
  quantity int [not null]
  unitPrice int [not null] // price in cents at purchase time
  createdAt datetime [not null]
  updatedAt datetime [not null]
}

////////////////////////////////////////////////////
// YELLOW — Events & Discounts
 events {
  id UUID [pk]
  name varchar [not null]
  description text
  imageUrl varchar [not null] // required CDN URL
  startDate datetime [not null]
  endDate datetime [not null]
  status eventStatus [not null, default: 'ACTIVE']
  createdAt datetime [not null]
  updatedAt datetime [not null]
}

Enum eventStatus {
  ACTIVE
  INACTIVE
  SCHEDULED
  EXPIRED
}

 discounts {
  id UUID [pk]
  eventId UUID [not null] // foreign key to events
  type discountType [not null]
  value int [not null] // percentage (0-100) or fixed amount in cents
  minPurchaseAmount int // minimum purchase required in cents
  maxDiscountAmount int // max discount for percentage type in cents
  createdAt datetime [not null]
  updatedAt datetime [not null]
}

Enum discountType {
  PERCENTAGE
  FIXED_AMOUNT
}

 event_products {
  eventId UUID [not null]
  productId UUID [not null]
  createdAt datetime [not null]
}

////////////////////////////////////////////////////
// RED — Reviews
 reviews {
  id UUID [pk]
  productId UUID [not null] // foreign key to products
  userId UUID [not null] // foreign key to users
  rating int [not null] // 1-5 stars
  title varchar(100) // review headline
  comment text // review content
  isVerifiedPurchase boolean [not null, default: false]
  helpfulCount int [not null, default: 0]
  createdAt datetime [not null]
  updatedAt datetime [not null]
}

 review_images {
  id UUID [pk]
  reviewId UUID [not null] // foreign key to reviews
  imageUrl varchar [not null] // CDN URL for the image
  altText varchar // alternative text for accessibility
  sortOrder int [not null, default: 0] // order of images in the review
  createdAt datetime [not null]
  updatedAt datetime [not null]
}

 review_helpful_votes {
  id UUID [pk]
  reviewId UUID [not null] // foreign key to reviews
  userId UUID [not null] // foreign key to users
  createdAt datetime [not null]
}

////////////////////////////////////////////////////
// GRAY — Logs
 audit_logs {
  id UUID [pk]
  userId UUID fk
  action varchar [not null]
  entity varchar [not null] // e.g., 'Product', 'Order'
  entityId UUID
  metadata jsonb
  createdAt datetime [not null]
}

////////////////////////////////////////////////////
// RELATIONSHIPS
////////////////////////////////////////////////////

// Users → Carts, Orders, Reviews, Logs, Refresh Tokens
 carts.userId > users.id
 orders.userId > users.id
 reviews.userId > users.id
 audit_logs.userId > users.id
 refresh_tokens.userId > users.id

// Brands & Categories → Products
 products.brandId > brands.id
 products.categoryId > categories.id
 categories.parentId > categories.id // self-referencing for hierarchy

// Products → Variants, Images & Reviews
 product_variants.productId > products.id
 product_images.productId > products.id
 product_images.variantId > product_variants.id // optional
 reviews.productId > products.id

// Reviews → Review Images & Helpful Votes
 review_images.reviewId > reviews.id
 review_helpful_votes.reviewId > reviews.id
 review_helpful_votes.userId > users.id

// Cart → Cart Items → Variants
 cart_items.cartId > carts.id
 cart_items.variantId > product_variants.id

// Orders → Order Items → Variants
 order_items.orderId > orders.id
 order_items.variantId > product_variants.id

// Events → Discounts, Event Products
 discounts.eventId > events.id
 event_products.eventId > events.id
 event_products.productId > products.id

////////////////////////////////////////////////////
// INDEXES (for performance)
////////////////////////////////////////////////////

Table categories {
  indexes {
    parentId [name: 'idx_categories_parent']
    slug [name: 'idx_categories_slug']
    (level, sortOrder) [name: 'idx_categories_hierarchy']
  }
}

Table products {
  indexes {
    brandId [name: 'idx_products_brand']
    categoryId [name: 'idx_products_category']
    gender [name: 'idx_products_gender']
    status [name: 'idx_products_status']
    averageRating [name: 'idx_products_rating']
    (brandId, categoryId, gender) [name: 'idx_products_filter']
    (averageRating, reviewCount) [name: 'idx_products_rating_filter']
  }
}

Table product_variants {
  indexes {
    productId [name: 'idx_variants_product']
    sku [name: 'idx_variants_sku']
    attributes [name: 'idx_variants_attributes', type: gin] // GIN index for JSONB
    stock [name: 'idx_variants_stock']
  }
}

Table product_images {
  indexes {
    productId [name: 'idx_images_product']
    variantId [name: 'idx_images_variant']
    isPrimary [name: 'idx_images_primary']
    (productId, sortOrder) [name: 'idx_images_sort']
  }
}

Table events {
  indexes {
    status [name: 'idx_events_status']
    (startDate, endDate) [name: 'idx_events_dates']
    (status, startDate, endDate) [name: 'idx_events_active']
  }
}

Table discounts {
  indexes {
    eventId [name: 'idx_discounts_event']
    type [name: 'idx_discounts_type']
  }
}

Table event_products {
  indexes {
    (eventId, productId) [name: 'idx_event_products_composite', unique: true]
    eventId [name: 'idx_event_products_event']
    productId [name: 'idx_event_products_product']
  }
}

Table reviews {
  indexes {
    productId [name: 'idx_reviews_product']
    userId [name: 'idx_reviews_user']
    rating [name: 'idx_reviews_rating']
    createdAt [name: 'idx_reviews_created']
    (userId, productId) [name: 'idx_reviews_user_product', unique: true]
  }
}

Table review_images {
  indexes {
    reviewId [name: 'idx_review_images_review']
    (reviewId, sortOrder) [name: 'idx_review_images_sort']
  }
}

Table review_helpful_votes {
  indexes {
    reviewId [name: 'idx_review_helpful_votes_review']
    userId [name: 'idx_review_helpful_votes_user']
    (reviewId, userId) [name: 'idx_review_helpful_votes_unique', unique: true]
  }
}
